revoke delete on table "public"."employees" from "anon";

revoke insert on table "public"."employees" from "anon";

revoke references on table "public"."employees" from "anon";

revoke select on table "public"."employees" from "anon";

revoke trigger on table "public"."employees" from "anon";

revoke truncate on table "public"."employees" from "anon";

revoke update on table "public"."employees" from "anon";

revoke delete on table "public"."employees" from "authenticated";

revoke insert on table "public"."employees" from "authenticated";

revoke references on table "public"."employees" from "authenticated";

revoke select on table "public"."employees" from "authenticated";

revoke trigger on table "public"."employees" from "authenticated";

revoke truncate on table "public"."employees" from "authenticated";

revoke update on table "public"."employees" from "authenticated";

revoke delete on table "public"."employees" from "service_role";

revoke insert on table "public"."employees" from "service_role";

revoke references on table "public"."employees" from "service_role";

revoke select on table "public"."employees" from "service_role";

revoke trigger on table "public"."employees" from "service_role";

revoke truncate on table "public"."employees" from "service_role";

revoke update on table "public"."employees" from "service_role";

alter table "public"."employees" drop constraint "employees_pkey";

drop index if exists "public"."employees_pkey";

-- drop table "public"."employees";

create table "public"."passwordplayground" (
    "id" bigint generated by default as identity not null,
    "username" text not null,
    "password_hash" text not null,
    "created_at" timestamp with time zone not null default now(),
    "email" text,
    "visits" bigint,
    "generated_passwords" bigint,
    "tested_passwords" bigint,
    "generated_usernames" bigint,
    "avatar" text
);


alter table "public"."passwordplayground" enable row level security;

CREATE UNIQUE INDEX passwordplayground_email_key ON public.passwordplayground USING btree (email);

CREATE UNIQUE INDEX passwordplayground_id_key ON public.passwordplayground USING btree (id);

CREATE UNIQUE INDEX passwordplayground_pkey ON public.passwordplayground USING btree (id, username);

CREATE UNIQUE INDEX passwordplayground_username_key ON public.passwordplayground USING btree (username);

alter table "public"."passwordplayground" add constraint "passwordplayground_pkey" PRIMARY KEY using index "passwordplayground_pkey";

alter table "public"."passwordplayground" add constraint "passwordplayground_email_key" UNIQUE using index "passwordplayground_email_key";

alter table "public"."passwordplayground" add constraint "passwordplayground_id_key" UNIQUE using index "passwordplayground_id_key";

alter table "public"."passwordplayground" add constraint "passwordplayground_username_key" UNIQUE using index "passwordplayground_username_key";

grant delete on table "public"."passwordplayground" to "anon";

grant insert on table "public"."passwordplayground" to "anon";

grant references on table "public"."passwordplayground" to "anon";

grant select on table "public"."passwordplayground" to "anon";

grant trigger on table "public"."passwordplayground" to "anon";

grant truncate on table "public"."passwordplayground" to "anon";

grant update on table "public"."passwordplayground" to "anon";

grant delete on table "public"."passwordplayground" to "authenticated";

grant insert on table "public"."passwordplayground" to "authenticated";

grant references on table "public"."passwordplayground" to "authenticated";

grant select on table "public"."passwordplayground" to "authenticated";

grant trigger on table "public"."passwordplayground" to "authenticated";

grant truncate on table "public"."passwordplayground" to "authenticated";

grant update on table "public"."passwordplayground" to "authenticated";

grant delete on table "public"."passwordplayground" to "service_role";

grant insert on table "public"."passwordplayground" to "service_role";

grant references on table "public"."passwordplayground" to "service_role";

grant select on table "public"."passwordplayground" to "service_role";

grant trigger on table "public"."passwordplayground" to "service_role";

grant truncate on table "public"."passwordplayground" to "service_role";

grant update on table "public"."passwordplayground" to "service_role";

create policy "deleteUser"
on "public"."passwordplayground"
as permissive
for delete
to public
using (true);


create policy "logIn"
on "public"."passwordplayground"
as permissive
for select
to public
using (true);


create policy "register"
on "public"."passwordplayground"
as permissive
for insert
to public
with check (((username IS NOT NULL) AND (password_hash IS NOT NULL)));


create policy "update"
on "public"."passwordplayground"
as permissive
for update
to public
using (true)
with check (true);



